TEST: Type Checking and Compatibility
TASK: TASK_3
Generated: 2025-05-31 22:26:54
================================================================================

TEST: Type Checking and Compatibility
PURPOSE: Tests type compatibility for assignments, operations, and expressions
--------------------------------------------------------------------------------
INPUT PROGRAM:

    // Valid type operations
    let a:int = 42;
    let b:int = a + 10;
    let c:float = 3.14;
    let d:float = c * 2.0;
    let e:bool = true;
    let f:bool = e and false;
    let g:colour = #FF0000;
    
    // Valid type casting
    let h:float = a as float;
    let i:int = c as int;
    let j:colour = 255 as colour;
    
    // Valid comparisons (should return bool)
    let comp1:bool = a > b;
    let comp2:bool = c <= d;
    let comp3:bool = e == f;
    let comp4:bool = g != #00FF00;
    
    // Mixed arithmetic (should be type-compatible)
    let arith1:int = a + b * 2;
    let arith2:float = c - d / 2.0;
    let arith3:int = a % 5;
    
    // Invalid operations (should cause semantic errors)
    let error1:int = a + c;        // int + float without cast
    let error2:bool = e + f;       // bool + bool invalid
    let error3:colour = g * 2;     // colour * int invalid
    let error4:int = a and b;      // logical op on non-bool
    

PROGRAM AST:
------------------------------------------------------------
Program
  VarDecl: a : int
    Literal: 42 (int)
  VarDecl: b : int
    BinaryOp: +
      Identifier: a
      Literal: 10 (int)
  VarDecl: c : float
    Literal: 3.14 (float)
  VarDecl: d : float
    BinaryOp: *
      Identifier: c
      Literal: 2.0 (float)
  VarDecl: e : bool
    Literal: True (bool)
  VarDecl: f : bool
    BinaryOp: and
      Identifier: e
      Literal: False (bool)
  VarDecl: g : colour
    Literal: #FF0000 (colour)
  VarDecl: h : float
    Cast -> float
      Identifier: a
  VarDecl: i : int
    Cast -> int
      Identifier: c
  VarDecl: j : colour
    Cast -> colour
      Literal: 255 (int)
  VarDecl: comp1 : bool
    BinaryOp: >
      Identifier: a
      Identifier: b
  VarDecl: comp2 : bool
    BinaryOp: <=
      Identifier: c
      Identifier: d
  VarDecl: comp3 : bool
    BinaryOp: ==
      Identifier: e
      Identifier: f
  VarDecl: comp4 : bool
    BinaryOp: !=
      Identifier: g
      Literal: #00FF00 (colour)
  VarDecl: arith1 : int
    BinaryOp: +
      Identifier: a
      BinaryOp: *
... (28 more lines)
------------------------------------------------------------

SEMANTIC ANALYSIS RESULTS:
------------------------------------------------------------
Semantic errors detected (expected for invalid operations):
  1. Semantic Error at line 27, col 22: Invalid arithmetic operation: 'int' + 'float'. Operands must have matching types.
  2. Semantic Error at line 28, col 23: Invalid arithmetic operation: 'bool' + 'bool'. Operands must have matching types.
  3. Semantic Error at line 29, col 25: Invalid arithmetic operation: 'colour' * 'int'. Operands must have matching types.
  4. Semantic Error at line 30, col 22: Invalid logical operation: 'int' and 'int'. Operands must have matching types.

Expected errors for variables: ['error1', 'error2', 'error3', 'error4']

Type checking analysis completed

TYPE CHECKING: Successfully completed

================================================================================

