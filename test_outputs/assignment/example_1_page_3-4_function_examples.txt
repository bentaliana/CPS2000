TEST: Page 3-4 Function Examples
TASK: ASSIGNMENT
Generated: 2025-06-01 10:22:10
================================================================================

TEST: Assignment Page 3-4 Functions
PURPOSE: XGreaterY, AverageOfTwo, Max functions from assignment
--------------------------------------------------------------------------------
ASSIGNMENT EXAMPLE: Function definitions from pages 3-4

INPUT PROGRAM:

    /* This function takes two integers and return true if
     * the first argument is greater than the second.
     * Otherwise it returns false. */
    fun XGreaterY(x:int, y:int) -> bool {
        let ans:bool = true;
        if (y > x) { ans = false; }
        return ans;
    }

    // Same functionality as function above but using less code
    fun XGreaterY_2(x:int, y:int) -> bool {
        return x > y;
    }

    //Allocates memory space for 4 variables (x,y,t0,t1).
    fun AverageOfTwo(x:int, y:int) -> float {
        let t0:int = x + y;
        let t1:float = t0 / 2 as float; //casting expression to a float
        return t1;
    }

    /* Same functionality as function above but using less code.
     * Note the use of the brackets in the expression following
     * the return statement. Allocates space for 2 variables. */
    fun AverageOfTwo_2(x:int, y:int) -> float {
        return (x + y) / 2 as float;
    }

    //Takes two integers and returns the max of the two.
    fun Max(x:int, y:int) -> int {
        let m:int = x;
        if (y > m) { m = y; }
        return m;
    }
    

PROGRAM AST:
------------------------------------------------------------
Program
  FuncDecl: XGreaterY(x:int, y:int) -> bool
    Param: x : int
    Param: y : int
    Block
      VarDecl: ans : bool
        Literal: True (bool)
      If
        BinaryOp: >
          Identifier: y
          Identifier: x
        Block
          Assignment
            Identifier: ans
            Literal: False (bool)
      Return
        Identifier: ans
  FuncDecl: XGreaterY_2(x:int, y:int) -> bool
    Param: x : int
    Param: y : int
    Block
      Return
        BinaryOp: >
          Identifier: x
          Identifier: y
  FuncDecl: AverageOfTwo(x:int, y:int) -> float
    Param: x : int
    Param: y : int
    Block
      VarDecl: t0 : int
        BinaryOp: +
          Identifier: x
          Identifier: y
      VarDecl: t1 : float
        BinaryOp: /
          Identifier: t0
          Cast -> float
            Literal: 2 (int)
      Return
        Identifier: t1
  FuncDecl: AverageOfTwo_2(x:int, y:int) -> float
    Param: x : int
    Param: y : int
    Block
      Return
        BinaryOp: /
          BinaryOp: +
            Identifier: x
            Identifier: y
          Cast -> float
            Literal: 2 (int)
  FuncDecl: Max(x:int, y:int) -> int
    Param: x : int
    Param: y : int
    Block
      VarDecl: m : int
        Identifier: x
      If
        BinaryOp: >
          Identifier: y
          Identifier: m
        Block
          Assignment
            Identifier: m
            Identifier: y
      Return
        Identifier: m
------------------------------------------------------------

Successfully compiled 97 PArIR instructions

COMPILATION: Successfully completed

================================================================================

