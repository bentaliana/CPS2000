TEST: Basic Arithmetic and Memory Operations
TASK: TASK_4
Generated: 2025-06-01 20:30:29
================================================================================

TEST: Basic Arithmetic and Memory Operations
PURPOSE: Tests variable declarations, arithmetic operations, and memory access
--------------------------------------------------------------------------------
INPUT PROGRAM:

    let a:int = 10;
    let b:int = 20;
    let c:int = a + b;
    let d:int = c * 2;
    let e:int = d - a;
    let f:int = e / 5;
    let g:int = f % 3;
    
    let x:float = 3.14;
    let y:float = x * 2.0;
    
    let flag:bool = true;
    let result:bool = flag and false;
    
    let color1:colour = #FF0000;
    let color2:colour = 255 as colour;
    

PROGRAM AST:
------------------------------------------------------------
Program
  VarDecl: a : int
    Literal: 10 (int)
  VarDecl: b : int
    Literal: 20 (int)
  VarDecl: c : int
    BinaryOp: +
      Identifier: a
      Identifier: b
  VarDecl: d : int
    BinaryOp: *
      Identifier: c
      Literal: 2 (int)
  VarDecl: e : int
    BinaryOp: -
      Identifier: d
      Identifier: a
  VarDecl: f : int
    BinaryOp: /
      Identifier: e
      Literal: 5 (int)
  VarDecl: g : int
    BinaryOp: %
      Identifier: f
      Literal: 3 (int)
  VarDecl: x : float
    Literal: 3.14 (float)
  VarDecl: y : float
    BinaryOp: *
      Identifier: x
      Literal: 2.0 (float)
  VarDecl: flag : bool
    Literal: True (bool)
  VarDecl: result : bool
    BinaryOp: and
      Identifier: flag
      Literal: False (bool)
  VarDecl: color1 : colour
    Literal: #FF0000 (colour)
  VarDecl: color2 : colour
    Cast -> colour
      Literal: 255 (int)
------------------------------------------------------------

GENERATED PArIR:
------------------------------------------------------------
.main
push 4
jmp
halt
push 14
oframe
push 10
push 1
push 0
st
push 20
push 2
push 0
st
push [2:0]
push [1:0]
add
push 3
push 0
st
push 2
push [3:0]
mul
push 4
push 0
st
push [1:0]
push [4:0]
sub
push 5
push 0
st
push 5
push [5:0]
div
push 6
push 0
st
push 3
push [6:0]
mod
push 7
push 0
st
push 3.14
push 8
push 0
st
push 2.0
push [8:0]
mul
push 9
push 0
st
push 1
push 10
push 0
st
push 0
push [10:0]
and
push 11
push 0
st
push #FF0000
push 12
push 0
st
push 255
push 13
push 0
st
cframe
halt
------------------------------------------------------------

INSTRUCTION ANALYSIS:
Total instructions: 74
Instruction frequency:
  .main: 1
  add: 1
  and: 1
  cframe: 1
  div: 1
  halt: 2
  jmp: 1
  mod: 1
  mul: 2
  oframe: 1
  push: 48
  st: 13
  sub: 1

All essential operations present

ARITHMETIC AND MEMORY: Successfully completed

================================================================================

